#
# Copyright IBM Corporation 2020,2021
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: reefer-rest
  labels:
    name: reefer-rest
spec:
{{ if not (or .Values.ingress.pathBased .Values.ingress.hostBased) }}
  type: NodePort
{{ end }}
  selector:
    name: reefer-rest
  ports:
    - name: app
      port: {{ .Values.reefer.rest.port }}
{{ if not (or .Values.ingress.pathBased .Values.ingress.hostBased) }}
      nodePort: {{ .Values.reefer.rest.nodeport }}
{{ end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reefer-rest
  labels:
    name: reefer-rest
spec:
{{- if .Values.global.affinity }}
  replicas: {{ .Values.reefer.rest.replicas }}
{{- else }}
  replicas: 1
{{- end }}
  selector:
    matchLabels:
      name: reefer-rest
  template:
    metadata:
      labels:
        name: reefer-rest
      annotations:
        kar.ibm.com/app: reefer
        kar.ibm.com/service: reeferservice
        kar.ibm.com/verbose: {{ .Values.kar.verbose }}
        kar.ibm.com/appPort: {{ .Values.reefer.rest.port | quote }}
        kar.ibm.com/sidecarContainer: "false"
{{- if .Values.global.karargs }}
        kar.ibm.com/extraArgs: {{ .Values.global.karargs }}
{{- end }}
    spec:
{{- if .Values.global.affinity }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kar-type
                operator: In
                values:
                - worker
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - reefer-rest
            topologyKey: "kubernetes.io/hostname"
{{- end }}
      imagePullSecrets:
         - name: {{ .Values.kar.imagePullSecret }}
      containers:
      - name: app
        image: {{ .Values.reefer.imagePrefix }}/{{ .Values.reefer.rest.imageName }}:{{ .Values.reefer.version }}
        ports:
        - name: app
          containerPort: {{ .Values.reefer.rest.port }}
        env:
        - name: LOG_TIMESTAMP
          value: "true"
